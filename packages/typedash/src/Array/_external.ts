// https://gcanti.github.io/fp-ts/modules/Array.ts.html
export {
  alt,
  altW,
  ap,
  apFirst,
  append,
  appendW,
  Applicative,
  apS,
  apSecond,
  bind,
  bindTo,
  chain,
  chainFirst,
  chainRecBreadthFirst,
  chainRecDepthFirst,
  chainWithIndex,
  chop,
  chunksOf,
  compact,
  comprehension,
  concat,
  concatW,
  copy,
  deleteAt,
  difference,
  Do,
  dropLeft,
  dropLeftWhile,
  dropRight,
  duplicate,
  elem, // R.includes (but with Eq)
  every, // R.all,
  exists, // R.any,
  extend,
  filter,
  filterE,
  filterMap,
  filterMapWithIndex,
  filterWithIndex,
  findFirst,
  findFirstMap,
  findIndex,
  findLast,
  findLastIndex,
  findLastMap,
  flap,
  flatten,
  foldLeft,
  foldMap,
  foldMapWithIndex,
  foldRight,
  fromEither,
  fromEitherK,
  fromOption,
  fromOptionK,
  fromPredicate,
  getDifferenceMagma,
  getEq,
  getIntersectionSemigroup,
  getMonoid,
  getOrd,
  getSemigroup,
  getShow,
  getUnionMonoid,
  getUnionSemigroup,
  guard,
  head,
  init,
  insertAt,
  intercalate,
  intersection,
  intersperse,
  isEmpty,
  isNonEmpty,
  isOutOfBound,
  last,
  lefts,
  lookup, // R.nth,
  makeBy,
  map,
  mapWithIndex,
  match,
  matchLeft,
  matchLeftW,
  matchRight,
  matchRightW,
  matchW,
  modifyAt,
  of,
  partition,
  partitionMap,
  partitionMapWithIndex,
  partitionWithIndex,
  prepend,
  prependAll,
  prependW,
  reduce,
  reduceRight,
  reduceRightWithIndex,
  reduceWithIndex,
  replicate, // R.repeat
  reverse,
  rights,
  rotate,
  scanLeft,
  scanRight,
  separate,
  sequence,
  size,
  some,
  sort as sortOrd,
  sortBy as sortByOrd,
  spanLeft,
  splitAt,
  tail,
  takeLeft,
  takeLeftWhile,
  takeRight,
  traverse,
  traverseWithIndex,
  unfold,
  union,
  uniq as uniqEq,
  unsafeDeleteAt,
  unsafeInsertAt,
  unsafeUpdateAt,
  unzip,
  updateAt,
  wilt,
  wither,
  zero,
  zip,
  zipWith,
} from 'fp-ts/Array'
export type { Monad } from 'fp-ts/Array'

export {
  allM,
  anyM,
  aperture,
  cartesian,
  countBy,
  dropAt,
  dropRepeats,
  dropRightWhile,
  elemV,
  endsWith,
  extractAt,
  filterA,
  fromIterable,
  fromReadonly,
  getDisorderedEq,
  insertMany,
  join,
  maximum,
  mean,
  median,
  minimum,
  moveFrom,
  moveTo,
  none,
  pluckFirst,
  product,
  reduceRightWhile,
  reduceWhile,
  reject,
  separateNE,
  slice,
  startsWith,
  sum,
  symmetricDifference,
  takeRightWhile,
  toReadonly,
  transpose,
  upsert,
  without,
  zipAll,
} from 'fp-ts-std/Array'

export { includes, sort, sortBy, groupWith, groupBy, uniq, uniqBy } from 'ramda'

export {
  included,
  lengthEq,
  lengthGt,
  lengthGte,
  lengthLt,
  lengthLte,
  lengthNotEq,
  isNotEmpty,
} from 'ramda-adjunct'
